This prerelease software.
We use it in limited production ourselves but would not recommend it for general production use.

Why use Amazon S3 Image Service?

1. You have an S3 bucket where you dump images
2. You want to on demand generate copies of these images with custom resolutions, just by providing X and Y size in URL like: <img src="http://images.example.com/image/image_id/res_x/res_y" >
3. You also don't want to pipe all images through your own service, but want data transfers to occur directly between client and Amazon S3

Example:
You have a large size image called IMAGE123.jpg in your bucket IMAGEBUCKET.
To get a scaled down thumbnail of this image with pixel dimension 100x100 then add
<img src="http://s3-image-service/image/resize=100,100/IMAGE123" /> to your page.
imageservice will then create the file IMAGEBUCKET/imageservice/resize=100,100/IMAGE123.jpg and redirect the browser to that URL.
Subsequent requests to http://s3-image-service/image/resize=100,100/IMAGE123 will not resize the image again but directly redirect to the previously generated thumbnail.

You can apply any gm transformations in the url, see http://aheckmann.github.io/gm/docs.html for more information.
Options objects are not yet supported.

The app requires the following environment variables:
AWS_ACCESS_KEY_ID
AWS_SECRET_ACCESS_KEY
AWS_S3_BUCKET
AWS_S3_BUCKET_PUBLIC_URL

Dockerfile is included for easy deployment

How to deploy on heroku

1. Clone this project and change working directory to repository
git clone ....
cd s3-image-service

2. Create heroku app
$ heroku create
Creating protected-ocean-3023... done, stack is cedar-14
https://protected-ocean-3023.herokuapp.com/ | https://git.heroku.com/protected-ocean-3023.git
Git remote heroku added
updating Heroku CLI...done. Updated to 3.40.6


3. Add a redis instance to your heroku app. s3-image-service looks for heroku environment variables for rediscloud, RedisGreen, Open Redis and Redis to Go by default. However, environment variable REDIS_URL has priority.
heroku addons:create rediscloud:30

4. Set your AWS S3 credentials to heroku config.
heroku config:set AWS_ACCESS_KEY_ID="ABC123"
heroku config:set AWS_SECRET_ACCESS_KEY="321CBA"
heroku config:set AWS_S3_BUCKET="bucket-name"
heroku config:set AWS_S3_BUCKET_REGION="us-east-1"

5. Deploy your app to the cloud
git push heroku master

6. (Optional) Set front facing URL of S3 bucket. If you use a CDN like Amazon CloudFront to serve images from S3, provide the public URL as a heroku setting
heroku config:set AWS_S3_BUCKET_PUBLIC_URL="https://something.cloudfront.net"
